# -*- coding: utf-8 -*-
"""
Created on Thu Mar 25 11:04:11 2021

@author: Home
"""


s = "barfoothefoobarman"
words = ["foo","bar"]

class Solution:
    def findSubstring(self, s, words):
        
        # create all possible combinations of word in words
        from itertools import permutations
        perm = set(permutations(words, len(words)))
        print(perm)
        
        # concatenate words generated by above permuatation
        perm_list = [w[0] + w[1] for w in perm]
        
        # get index if word found in s
        res = [s.index(word) for word in perm_list if word in s]
        
        return res


sol = Solution()
# =============================================================================
# s = "barfoothefoobarman"
# w = ["foo","bar"]
# print(sol.findSubstring(s, w))
# =============================================================================

s1 = "wordgoodgoodgoodbestword"
w1  = ["word","good","best","word"]
print(sol.findSubstring( s1, w1))

# =============================================================================
# s2 = "barfoofoobarthefoobarman"
# w2  = ["bar","foo","the"]
# print(sol.findSubstring( s2, w2))
# =============================================================================
